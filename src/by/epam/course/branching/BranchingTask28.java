package by.epam.course.branching;

/* Ð”Ð°Ð½Ñ‹ Ñ‚Ñ€Ð¸ Ñ‡Ð¸Ñ?Ð»Ð° a, b, Ñ?. ÐžÐ¿Ñ€ÐµÐ´ÐµÐ»Ð¸Ñ‚ÑŒ, ÐºÐ°ÐºÐ¾Ðµ Ð¸Ð· Ð½Ð¸Ñ… Ñ€Ð°Ð²Ð½Ð¾ d. Ð•Ñ?Ð»Ð¸ Ð½Ð¸ Ð¾Ð´Ð½Ð¾ Ð½Ðµ Ñ€Ð°Ð²Ð½Ð¾ d, Ñ‚Ð¾ Ð½Ð°Ð¹Ñ‚Ð¸ max(d â€” a, d â€” b, d â€”
c).*/

public class BranchingTask28 {

	public static void solution() {
		
		int a;
		int b;
		int c;
		int d;
		int tempx;
		int tempy;
		int tempz;
		
		a = 3;
		b = 7;
		c = 9;
		d = 15;
		
		if (a == d || b ==d || c ==d) {
				if(a == d) {
				
				System.out.println(" a Ñ€Ð°Ð²Ð½Ð¾ d");
			}
			if(b == d) {
				
				System.out.println(" b Ñ€Ð°Ð²Ð½Ð¾ d");
			}
			if(c == d) {
				
				System.out.println(" c Ñ€Ð°Ð²Ð½Ð¾ d");
			}
		}
		else {
			tempx = d - a;
			tempy = d - b;
			tempz = d - c;
			
			int s;
			int q;
			
			if(tempx > tempy){  
				s = tempx;
			}
			else{
				s = tempy;
			}
			if(s > tempz){
				q = s;
			}
			else{
				q = tempz;
			}
		} System.out.println("Ð—Ð½Ð°Ñ‡ÐµÐ½Ð¸Ðµ d =" + " "+ d);
		
	}
	
}
