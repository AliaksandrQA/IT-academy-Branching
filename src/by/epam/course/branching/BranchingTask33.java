package by.epam.course.branching;

/* –?–∞–ø–∏—?–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—? –ø–æ –ø–∞—Ä–æ–ª—é –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—?—Ç—å —É—Ä–æ–≤–µ–Ω—å –¥–æ—?—Ç—É–ø–∞ —?–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∫ —?–µ–∫—Ä–µ—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤
–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –î–æ—?—Ç—É–ø –∫ –±–∞–∑–µ –∏–º–µ—é—Ç —Ç–æ–ª—å–∫–æ —à–µ—?—Ç—å —á–µ–ª–æ–≤–µ–∫, —Ä–∞–∑–±–∏—Ç—ã—Ö –Ω–∞ —Ç—Ä–∏ –≥—Ä—É–ø–ø—ã –ø–æ —?—Ç–µ–ø–µ–Ω–∏ –¥–æ—?—Ç—É–ø–∞. –û–Ω–∏ –∏–º–µ—é—Ç
—?–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–æ–ª–∏: 9583, 1747 ‚Äî –¥–æ—?—Ç—É–ø–Ω—ã –º–æ–¥—É–ª–∏ –±–∞–∑ –?, –í, –°; 3331, 7922 ‚Äî –¥–æ—?—Ç—É–ø–Ω—ã –º–æ–¥—É–ª–∏ –±–∞–∑ –í, –°; 9455, 8997 ‚Äî
–¥–æ—?—Ç—É–ø–µ–Ω –º–æ–¥—É–ª—å –±–∞–∑—ã –°.*/

public class BranchingTask33 {

	public static void solution() {

		
		double highAccess1;
		double highAccess2;
		double midAcess1;
		double midAcess2;
		double lowAcess1;
		double lowAcess2;
		double temp1;
		double temp2;
		double temp3;
		
		highAccess1 = 9583;
		highAccess2 = 1747;
		midAcess1 = 3331;
		midAcess2 = 7922;
		lowAcess1 = 9455;
		lowAcess2 = 8997;
		
		temp1 = 9583;
		temp2 = 3331;
		temp3 = 8997;
		
		if(temp1 == highAccess1 || temp1 == highAccess1) {
			System.out.println("–î–æ—?—Ç—É–ø –∫ –±–∞–∑–∞–º –?, –í, –° –æ—Ç–∫—Ä—ã—Ç");
		}
		else if (temp2 == midAcess1 || temp2 == midAcess2) {
			System.out.println("–î–æ—?—Ç—É–ø –∫ –±–∞–∑–∞–º –í, –° –æ—Ç–∫—Ä—ã—Ç");
		}
		else if (temp3 == lowAcess1 || temp3 == lowAcess1 ) {
	    System.out.println("–î–æ—?—Ç—É–ø –∫ –±–∞–∑–µ  –° –æ—Ç–∫—Ä—ã—Ç");
	
}
		else if ((temp1 != highAccess1 && temp1 !=highAccess2  && temp2 != midAcess1 && temp2 != midAcess2 && temp3 != lowAcess1 && temp3 != lowAcess2)) {
			System.out.println("–î–æ—?—Ç—É–ø –∑–∞–∫—Ä—ã—Ç");
			
		}
	}
}
