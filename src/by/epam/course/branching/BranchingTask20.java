package by.epam.course.branching;

/* –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –¥–µ–ª–∏—Ç–µ–ª–µ–º –∫–∞–∫–∏—Ö —á–∏—?–µ–ª –∞, b, —? —?–≤–ª—?–µ—Ç—?—? —á–∏—?–ª–æ k. */  

public class BranchingTask20 {

	public static void solution() {
		
		
		int a;
		int b;
		int c;
		int k;
		
		a = 3;
		b = 1;
		c = 2;
		k = 2;
		
		if (a % k == 0) {
            System.out.println("–ß–∏—?–ª–æ " + k + " —?–≤–ª—?–µ—Ç—?—? –¥–µ–ª–∏—Ç–µ–ª–µ–º —á–∏—?–ª–∞ " + a);
        }
        if (b % k == 0) {
            System.out.println("–ß–∏—?–ª–æ " + k + " —?–≤–ª—?–µ—Ç—?—? –¥–µ–ª–∏—Ç–µ–ª–µ–º —á–∏—?–ª–∞ " + b);
        }
        if (c % k == 0) {
            System.out.println("–ß–∏—?–ª–æ " + k + " —?–≤–ª—?–µ—Ç—?—? –¥–µ–ª–∏—Ç–µ–ª–µ–º —á–∏—?–ª–∞ " + c);
        }

	}
}
