package by.epam.course.branching;

/*–î–∞–Ω—ã —Ü–µ–ª—ã–µ —á–∏—?–ª–∞ —Ç, –ø. –ï—?–ª–∏ —á–∏—?–ª–∞ –Ω–µ —Ä–∞–≤–Ω—ã, —Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å –∫–∞–∂–¥–æ–µ –∏–∑ –Ω–∏—Ö –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ —á–∏—?–ª–æ–º, —Ä–∞–≤–Ω—ã–º –±–æ–ª—å—à–µ–º—É
–∏–∑ –∏—?—Ö–æ–¥–Ω—ã—Ö, –∞ –µ—?–ª–∏ —Ä–∞–≤–Ω—ã, —Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å —á–∏—?–ª–∞ –Ω—É–ª—?–º–∏. */

public class BranchingTask17 {

	public static void solution() {

		int n;
		int m;

		n = 10;
		m = 69;

		if (n != m) {

			if (n > m) {
				m = n;
			} else {
				n = m;
			}
		} else if (n == m) {
			n = 0;
			m = 0;
		}
		System.out.println("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —á–∏—?–ª–∞: " + n + ", " + m);
	}
}
