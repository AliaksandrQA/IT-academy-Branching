package by.epam.course.branching;

/*–ó–∞–¥–∞–Ω—ã —Ä–∞–∑–º–µ—Ä—ã –?, –í –ø—Ä—?–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ä—?—Ç–∏—? –∏ —Ä–∞–∑–º–µ—Ä—ã —Ö, —É, z –∫–∏—Ä–ø–∏—á–∞. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –ø—Ä–æ–π–¥–µ—Ç –ª–∏ –∫–∏—Ä–ø–∏—á —á–µ—Ä–µ–∑
–æ—Ç–≤–µ—Ä—?—Ç–∏–µ. */

public class BranchingTask31 {

	public static void solution() {

		double a;
		double b;
		double s;
		double s1;
		double s2;
		double s3;

		double x;
		double y;
		double z;

		a = 100;
		b = 200;

		x = 20;
		y = 5;
		z = 10;

		s = a * b;
		s1 = x * y;
		s2 = x * z;
		s3 = y * z;

		if (s > s1 && s > s2 && s > s3) {
			System.out.println("–ö–∏—Ä–ø–∏—á –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ä—?—Ç–∏–µ");

		} else {
			System.out.println("–ö–∏—Ä–ø–∏—á –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ä—?—Ç–∏–µ");
		}
	}
}
