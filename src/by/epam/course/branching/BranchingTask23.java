package by.epam.course.branching;

import java.util.Scanner;

/*–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—?—Ç—å –¥–∞—Ç—ã, –≤–≤–µ–¥–µ–Ω–Ω–æ–π —? –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (—á–∏—?–ª–æ ‚Äî –æ—Ç 1 –¥–æ 31, –º–µ—?—?—Ü ‚Äî –æ—Ç 1 –¥–æ 12). –ï—?–ª–∏ –≤–≤–µ–¥–µ–Ω—ã
–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ç–æ —?–æ–æ–±—â–∏—Ç—å –æ–± —?—Ç–æ–º. */

public class BranchingTask23 {

	public static void solution() {

		System.out.print("–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ —Ü–µ–ª–æ–µ —á–∏—?–ª–æ –æ—Ç 1 –¥–æ 31: ");
		Scanner scan = new Scanner(System.in);
		try {

			int number = scan.nextInt();

			if (number < 1 || number > 31) {
				System.out.println("–î–∞—Ç–∞ –Ω–µ —?–æ–æ—Ç–≤–µ—Ç—?—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—?–º");
			} else {
				System.out.println("–í—ã –≤–≤–µ–ª–∏ —á–∏—?–ª–æ " + number);
			}

			System.out.print("–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ —Ü–µ–ª–æ–µ —á–∏—?–ª–æ –æ—Ç 1 –¥–æ 12: ");
			int number2 = scan.nextInt();

			if (number2 < 1 || number2 > 12) {
				System.out.println("–î–∞—Ç–∞ –Ω–µ —?–æ–æ—Ç–≤–µ—Ç—?—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—?–º");
			} else {
				System.out.println("–í—ã –≤–≤–µ–ª–∏ –º–µ—?—?—Ü —Ä–∞–≤–Ω—ã–π " + number2);
			}
		}

		catch (java.util.InputMismatchException e) {
			System.out.println("Invalid Input. Relaunch the app");
		}
scan.close();
	}
}