package by.epam.course.branching;

/*–°–æ—?—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—? –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –ø–æ —Ç—Ä–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–º —?—Ç–æ—Ä–æ–Ω–∞–º, —?–≤–ª—?–µ—Ç—?—? –ª–∏ –¥–∞–Ω–Ω—ã–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫
—Ä–∞–≤–Ω–æ—?—Ç–æ—Ä–æ–Ω–Ω–∏–º. */

public class BranchingTask9 {
	
	public static void solution () {
		int a;
		int b;
		int c;
		
		a = 3;
		b = 4;
		c = 3;
		
		if ( a == b && b == c) {
			System.out.println("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —?–æ —?—Ç–æ—Ä–æ–Ω–∞–º–∏ " + a + ", " + b + ", " + c + " —?–≤–ª—?–µ—Ç—?—? —Ä–∞–≤–Ω–æ—?—Ç–æ—Ä–æ–Ω–Ω–∏–º");
		}
		else {
			 System.out.println("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —?–æ —?—Ç–æ—Ä–æ–Ω–∞–º–∏ " + a + ", " + b + ", " + c + " –Ω–µ —?–≤–ª—?–µ—Ç—?—? —Ä–∞–≤–Ω–æ—?—Ç–æ—Ä–æ–Ω–Ω–∏–º");
		}
	}
}
