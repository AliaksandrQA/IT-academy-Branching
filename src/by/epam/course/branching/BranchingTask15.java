package by.epam.course.branching;

/* –î–∞–Ω—ã –¥–µ–π—?—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—?–ª–∞ —Ö –∏ —É, –Ω–µ —Ä–∞–≤–Ω—ã–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É. –ú–µ–Ω—å—à–µ–µ –∏–∑ —?—Ç–∏—Ö –¥–≤—É—Ö —á–∏—?–µ–ª –∑–∞–º–µ–Ω–∏—Ç—å –ø–æ–ª–æ–≤–∏–Ω–æ–π –∏—Ö
—?—É–º–º—ã, –∞ –±–æ–ª—å—à–µ–µ ‚Äî –∏—Ö —É–¥–≤–æ–µ–Ω–Ω—ã–º –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º.*/

public class BranchingTask15 {

	public static void solution () {
		
		double x;
		double y;
		
		x = 7;
		y = 9;
		
		if ( x < y) {
			x = (x + y)/2;
			y = (y * x)*2;
				
		} 
		else {
			x = (x + y)/2;
			y = (y * x)*2;
		}
		
		System.out.println("–ú–µ–Ω—å—à–µ–µ –∏–∑ —?—Ç–∏—Ö –¥–≤—É—Ö —á–∏—?–µ–ª = "+" "+ x);
		System.out.println("–ë–æ–ª—å—à–µ–µ –∏–∑ —?—Ç–∏—Ö –¥–≤—É—Ö —á–∏—?–µ–ª = "+" "+ y);
	}
}
